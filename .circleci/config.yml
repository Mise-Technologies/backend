version: 2.1

orbs:
  heroku: circleci/heroku@1.2.6
  node: circleci/node@4.2.0

jobs:
  migrate: 
    executor:
      name: node/default
    steps:
      - run:
          command: npx sequelize-cli db:migrate
  lint:
    executor:
      name: node/default
    steps:
      - checkout
      - node/install-packages
      - run:
          command: npm run lint
  test:
    # executor:
    #   name: node/default
    docker:
      - image: circleci/node:latest
        environment:
          PGHOST: 127.0.0.1
          PGUSER: postgres
          NODE_ENV: development
      - image: circleci/postgres:latest
        # auth:
        #   username: mydockerhub-user
        #   password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nomi-dev
    steps:
      - checkout
      - node/install-packages
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Run migrations
          command: npx sequelize db:migrate
      - run:
          name: Run tests
          command: npm test
  release:
    executor:
      name: node/default
    steps:
      - checkout
      - node/install-packages
      - run: HUSKY_SKIP_HOOKS=1 npx semantic-release
  deploy:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - run:
          command: >
            echo "The command above installs Heroku, the command below deploys.
            What you do inbetween is up to you!"
      - heroku/deploy-via-git
      - migrate

workflows:
  lint-and-test:
    jobs:
      - lint
      - test:
          requires:
            - lint
      - hold:
          type: approval
          requires:
            - test
          filters:
            branches:
              only:
                - staging
                - production
      - release:
          requires:
            - hold
          filters:
            branches:
              only:
                - staging
                - production
  heroku_deploy:
    jobs:
      - heroku/deploy-via-git
    filters:
      branches:
        only:
          - staging
          - production